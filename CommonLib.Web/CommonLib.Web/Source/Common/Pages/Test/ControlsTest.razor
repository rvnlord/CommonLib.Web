@page "/Test/ControlsTest/"

@using CommonLib.Web.Source.Common.Utils.UtilClasses
@using CommonLib.Web.Source.Common.Converters
@using CommonLib.Source.Common.Converters

@inherits ControlsTestBase

<CascadingValue Value="_bpParentToCascade" Name="ParentParameter">

    <div class="my-col-sm-auto my-col-12" style="background: #101010;">
        <MyEditForm Model="@_employee" class="my-container" style="background: #101010;">
            <MyFluentValidator />
            <MyCssGrid 
                Padding="StylesConfig.HalfGutter.Px()" 
                Gap="StylesConfig.Gutter.Px()" 
                Template="@(new CssGridLayout("auto", "repeat(12, minmax(80px, auto))"))"
                SMTemplate="@(new CssGridLayout("60px auto", "repeat(6, minmax(60px, auto))"))"
                MDTemplate="@(new CssGridLayout("60px auto 200px 100px", "repeat(3, minmax(40px, auto))"))"
                class="my-test">
                @{
                    var cssGrid = Descendants.SingleOrDefault(d => d is MyEditForm)?.Descendants.SingleOrDefault(d => d is MyCssGrid) as MyCssGrid; // just for test, normally one can simply use @ref
                }
                <MyCssGridItem class="item1">1</MyCssGridItem>
                <MyCssGridItem class="item2">2: Device Size: @(cssGrid?.CurrentDeviceSize.EnumToString() ?? "not defined"), Layout For: @(cssGrid?.HighestDeviceSizeWithLayout?.EnumToString() ?? "not defined")</MyCssGridItem>
                <MyCssGridItem class="item3">3</MyCssGridItem>  
                <MyCssGridItem class="item4">4</MyCssGridItem>
                <MyCssGridItem class="item5">5</MyCssGridItem>
                <MyCssGridItem class="item6" MDArea="@(new CssGridArea(2, 2, 2, 1))">6</MyCssGridItem>
                <MyCssGridItem class="item7" Hide="@(new CssGridAreaHide(DeviceSizeKind.MD))">7</MyCssGridItem>
                <MyCssGridItem class="item8">8</MyCssGridItem>
                <MyCssGridItem class="item9">9</MyCssGridItem>
                <MyCssGridItem class="item10">10</MyCssGridItem>
                <MyCssGridItem class="item11">11</MyCssGridItem>
                <MyCssGridItem class="item12">12</MyCssGridItem>
            </MyCssGrid>
            <div class="my-row">
                <div class="my-col-12 my-media-query-test-container">
                    <MyMediaQuery DeviceSize="DeviceSizeKind.XS" OnChange="MediaQuery_ChangedAsync"></MyMediaQuery>
                    <MyMediaQuery DeviceSize="DeviceSizeKind.SM" OnChange="MediaQuery_ChangedAsync"></MyMediaQuery>
                    <div>@MediaQueryMessage</div>
                </div>
            </div>
            <div class="my-row">
                <div class="my-col-sm-2 my-col-12">
                    <MyLabel For="@(() => _employee.Name)" Align="@HorizontalAlignment.Right" />
                </div>
                <div class="my-col-sm-3 my-col-12">
                    <MyTextInput For="@(() => _employee.Name)" />
                </div>
                <div class="my-col-sm-7 my-col-12">
                    <MyValidationMessage For="@(() => _employee.Name)" />
                </div>
            </div>
            <div class="my-row">
                <div class="my-col-sm-2 my-col-12">
                    <MyLabel For="@(() => _employee.Department)" Align="@HorizontalAlignment.Right" />
                </div>
                <div class="my-col-sm-3 my-col-12">
                    <MyDropDown For="@(() => _employee.Department)" />
                </div>
                <div class="my-col-sm-7 my-col-12">
                    <MyValidationMessage For="@(() => _employee.Department)" />
                </div>
            </div>
            <div class="my-row">
                <div class="my-col-sm-2 my-col-12">
                    <MyLabel For="@(() => _employee.Domain)" Align="@HorizontalAlignment.Right" />
                </div>
                <div class="my-col-sm-3 my-col-12">
                    <MyDropDown For="@(() => _employee.Domain)" PossibleValues="@(new[] { "test1.com", "test2.com", "test3.com", "test4.com" })" />
                </div>
                <div class="my-col-sm-7 my-col-12">
                    <MyValidationMessage For="@(() => _employee.Domain)" />
                </div>
            </div>
            <div class="my-row">
                <div class="my-col-sm-3 my-col-12 my-offset-sm-2">
                    <MyButton Value="@("Submit".ToBp())" Icon="IconType.From(LightIconType.PaperPlane)" SubmitsForm="true" Styling="@ButtonStyling.Primary" Sizing="ButtonSizing.Auto" IconPlacement="ButtonIconPlacement.Right" />
                </div>
            </div>
        </MyEditForm>
    </div>

</CascadingValue>