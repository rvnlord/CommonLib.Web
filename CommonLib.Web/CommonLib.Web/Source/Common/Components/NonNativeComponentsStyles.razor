@namespace CommonLib.Web.Source.Common.Components

@using CommonLib.Source.Common.Converters
@using static CommonLib.Web.Source.Common.Components.StylesConfig

@inherits MyComponentStylesBase

<style class="@_renderClasses" my-guid="@_guid">

    .k-content {
        border-color: transparent;
        border-width: 0;
        color: white;
        background-color: transparent;
    }

    .k-popup {
        color: white;
        background: linear-gradient(0.25turn, #202020, #000000);
        background-color: transparent;
        box-shadow: none;
        border-radius: 0;
        border-color: transparent;
        border-width: 0;
        border-style: none;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-size: 1rem;
        line-height: 1.5;
        display: flex;
        flex-direction: column;
        align-items: stretch;
        box-shadow: 0 0 6px 2px rgb(0, 0, 255), inset 0 0 0 1px rgb(0, 0, 255);
        padding: 10px;
    }

    .k-state-disabled, .k-disabled, .k-widget[disabled], .k-disabled {
        outline: none;
        cursor: default;
        opacity: 1; 
        filter: none;
        pointer-events: none;
        box-shadow: none;
    }

    .k-input-inner {
        display: block;
        position: relative;
        box-sizing: border-box;
        padding: @HalfGutter.Px() @((HalfGutter + FontSize / 4).Px());
        line-height: @((FontSize * 1.5).Px());
        height: @InputHeight.Px(); /* box-sizing will be ignored if height is not set explicitly */
        @Font
        width: 100%;
        border: none;
    }
    
    .k-input-md .k-input-inner, .k-picker-md .k-input-inner {
        padding: @HalfGutter.Px() @((HalfGutter + FontSize / 4).Px());
    }

    .k-input {
        background: @InputBackgroundGradient;
        box-shadow: inset 0 0 0 1px #404040;
        border-width: 0;
        border-style: unset;
        border-color: transparent;
        border-radius: 0;
        color: white;
        background-color: transparent;
        transition: all .15s ease-in-out;
        overflow: visible;
    }
    
    .k-input.k-disabled {
        background: @InputDisabledBackgroundGradient;
        box-shadow: inset 0 0 0 1px #303030;
        color: #404040;
        outline: 0 none;
        resize: none;
        box-sizing: border-box;
    }

    .k-input:focus-within, 
    .k-input:focus, 
    .k-input.k-focus, 
    .k-input.k-invalid, 
    .k-input.ng-invalid.ng-touched, 
    .k-input.ng-invalid.ng-dirty, 
    .k-input.k-invalid:focus, 
    .k-input.k-invalid.k-focus, 
    .k-input.ng-invalid.ng-touched:focus, 
    .k-input.ng-invalid.ng-touched.k-focus, 
    .k-input.ng-invalid.ng-dirty:focus, 
    .k-input.ng-invalid.ng-dirty.k-focus {
        color: white;
        box-shadow: none;
        outline: none;
        border-color: inherit;
        background-color: transparent;
    }

    *:not(.k-input) > .k-input:focus-within,
    *:not(.k-input) > .k-input:focus,
    *:not(.k-input) > .k-input.k-focus,
    *:not(.k-input) > .k-input.k-invalid,
    *:not(.k-input) > .k-input.ng-invalid.ng-touched, 
    *:not(.k-input) > .k-input.ng-invalid.ng-dirty, 
    *:not(.k-input) > .k-input.k-invalid:focus, 
    *:not(.k-input) > .k-input.k-invalid.k-focus, 
    *:not(.k-input) > .k-input.ng-invalid.ng-touched:focus, 
    *:not(.k-input) > .k-input.ng-invalid.ng-touched.k-focus, 
    *:not(.k-input) > .k-input.ng-invalid.ng-dirty:focus,
    *:not(.k-input) > .k-input.ng-invalid.ng-dirty.k-focus {
        color: white;
        box-shadow: inset 0 0 0 1px #404040, 0 0 6px 2px blue;
        outline: none;
        border-color: inherit;
        background-color: transparent;
    }

    .k-input:not([disabled]):not(.disabled):not(.k-disabled).my-valid,
    .k-input:not([disabled]):not(.disabled):not(.k-disabled).k-valid {
        background: @SuccessBackgroundGradient;
    }

    .k-input:not([disabled]):not(.disabled):not(.k-disabled).my-invalid,
    .k-input:not([disabled]):not(.disabled):not(.k-disabled).k-invalid {
        background: @ErrorBackgroundGradient;
    }

    ::-webkit-input-placeholder {
        color: #404040;
        font-style: italic;
    }

    .k-input-inner::placeholder {
        color: #404040;
        font-style: italic;
        text-align: left;
    }

    :-moz-placeholder {
        color: #404040;
        font-style: italic;
        text-align: left;
    }

    ::-moz-placeholder {
        color: #404040;
        font-style: italic;
        text-align: left;
    }

    :-ms-input-placeholder {
        color: #404040;
        font-style: italic;
        text-align: left;
    }

    .k-button {
        color: rgb(255, 255, 255);
        background: linear-gradient(to bottom, rgb(0, 0, 128), rgb(0, 0, 0));
        box-shadow: 0 0 0 0 rgb(0, 0, 255), inset 0 0 0 1px rgb(0, 0, 255);
        display: block;
        position: relative;
        box-sizing: border-box;
        padding: 5px 9px; /* unlike my native buttons that have 24px cvontainers for 16px */
        line-height: @((FontSize * 1.5).Px());
        height: @InputHeight.Px(); /* box-sizing will be ignored if height is not set explicitly */
        max-height: @InputHeight.Px();
        @Font
        transition: all .15s ease-in-out;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        border: none;
        border-radius: 0;
        gap: 5px;
    }

    .k-button-overlay, .k-button::before {
        border-radius: inherit;
        content: "";
        background: transparent;
        opacity: 0;
        display: none;
        pointer-events: none;
        position: absolute;
        left: -1px;
        right: -1px;
        top: -1px;
        bottom: -1px;
        z-index: 0;
        transition: none;
        transition-duration: 0;
        transition-timing-function: inherit; 
        transition-delay: 0; 
        transition-property: none; 
    }

    .k-button::after {
        border-radius: inherit;
        content: "";
        opacity: 0;
        display: none;
        pointer-events: none;
        position: absolute;
        left: -1px;
        right: -1px;
        top: -1px;
        bottom: -1px;
        z-index: 0;
        transition: none;
        transition-duration: 0;
        transition-timing-function: inherit; 
        transition-delay: 0; 
        transition-property: none; 
    }

    .k-button:disabled, .k-button.k-disabled,
    .k-disabled .k-button {
        outline: none;
        opacity: 1; 
        filter: none;
        pointer-events: none;
        color: rgb(64, 64, 64);
        background: linear-gradient(to bottom, rgb(0, 0, 64), rgb(0, 0, 0));
        box-shadow: 0 0 0 0 rgb(0, 0, 255), inset 0 0 0 1px rgb(48, 48, 48);
        cursor: default;
    }
    
    .k-button-flat {
        border-color: transparent !important;
        color: inherit;
        background: linear-gradient(to bottom, rgb(0, 0, 128), rgb(0, 0, 0)) !important;
        box-shadow: 0 0 0 0 rgb(0, 0, 255), inset 0 0 0 1px rgb(0, 0, 255) !important;
    }

    .k-button-flat.k-disabled {
        border-color: transparent !important;
        color: rgb(64, 64, 64);
        background: linear-gradient(to bottom, rgb(0, 0, 64), rgb(0, 0, 0)) !important;
        box-shadow: 0 0 0 0 rgb(0, 0, 255), inset 0 0 0 1px rgb(48, 48, 48) !important;
        cursor: default;
    }

    .k-button:not(:disabled):not(.disabled):not([readonly]):not(.readonly):focus,
    .k-button:not(:disabled):not(.disabled):not([readonly]):not(.readonly):active,
    .k-button:not(:disabled):not(.disabled):not([readonly]):not(.readonly):hover {
        color: rgb(255, 255, 255);
        background: linear-gradient(to top, rgb(0, 0, 128), rgb(0, 0, 0)) !important;
        box-shadow: 0 0 6px 2px rgb(0, 0, 255), inset 0 0 0 1px rgb(0, 0, 255) !important;
    }

    .k-button-rectangle {
        width: auto;
        height: 34px;
    }

    .k-button-solid.k-button-rectangle {
        width: auto;
        height: 34px;
    }

    .k-editor.k-disabled .k-button,
    .k-editor.disabled .k-button,
    .k-grid.k-disabled .k-button,
    .k-grid.disabled .k-button,
    k-button.k-disabled,
    k-button.disabled {
        color: rgb(64, 64, 64);
        background: linear-gradient(to bottom, rgb(0, 0, 64), rgb(0, 0, 0));
        box-shadow: 0 0 0 0 rgb(0, 0, 255), inset 0 0 0 1px rgb(48, 48, 48);
        cursor: default;
    }

    .k-editor.k-disabled .k-button, .k-grid.k-disabled .k-button, 
    .k-editor.disabled .k-button, .k-grid.disabled .k-button, 
    .k-button.k-disabled, 
    .k-button.disabled, 
    .k-editor.k-disabled .k-input-spinner > .k-icon-button, .k-grid.k-disabled .k-input-spinner > .k-icon-button, .k-input.k-disabled .k-input-spinner > .k-icon-button,
    .k-editor.disabled .k-input-spinner > .k-icon-button, .k-grid.disabled .k-input-spinner > .k-icon-button, .k-input.disabled .k-input-spinner > .k-icon-button {
        color: rgb(64, 64, 64);
        background: linear-gradient(to bottom, rgb(0, 0, 64), rgb(0, 0, 0));
        box-shadow: 0 0 0 0 rgb(0 0 255), inset 0 0 0 1px rgb(48 48 48);
        cursor: default;
    }

    .k-input-button {
        width: 34px;
    }

    .k-icon-button.k-button-md {
        padding: 9px;
    }

    .k-input-spinner > .k-icon-button {
        box-shadow: 0 0 0 0 rgb(0 0 255), inset 0 0 0 1px rgb(0 0 255);
        width: 17px;
    }

    .k-spin-button > .k-button > .k-button-icon {
        font-size: 14px;
    }

    .k-button>.k-button-icon, .k-input-button>.k-button-icon {
        font-size: 16px;
        min-width: 1rem !important;
        min-height: 1rem !important;
    }

    .k-spinner-increase {
        margin-bottom: -0.5px;
    }

    .k-spinner-decrease {
        margin-top: -0.5px;
    }

    .k-popup .k-actions, .k-popup .k-edit-buttons, .k-popup .k-action-buttons, .k-popup .k-columnmenu-actions, .k-popup .k-form-buttons {
        margin-top: 10px;
        overflow: visible;
    }

    .k-time-list .k-item:hover {
        color: white;
        cursor: pointer;
    }

    .k-input-md .k-input-icon, .k-input-md .k-input-validation-icon, .k-input-md .k-input-loading-icon, .k-input-md .k-clear-value, .k-input-md .k-input-prefix > .k-icon, .k-input-md .k-input-suffix > .k-icon, .k-picker-md .k-input-icon, .k-picker-md .k-input-validation-icon, .k-picker-md .k-input-loading-icon, .k-picker-md .k-clear-value, .k-picker-md .k-input-prefix > .k-icon, .k-picker-md .k-input-suffix > .k-icon {
        width: 34px;
        height: 34px;
    }

    .k-list {
        border-color: transparent;
        border-width: 0;
        color: white;
        background-color: transparent;
    }

    .k-popup.k-list-container {
        padding: 0;
    }

    .k-list-item:focus, .k-list-optionlabel:focus, .k-list-item.k-focus, .k-focus.k-list-optionlabel {
        background: linear-gradient(to bottom, #000088, #000000);
        box-shadow: 0 0 6px 2px blue;
        cursor: pointer;
    }

    .k-list-item:hover, .k-list-optionlabel:hover, .k-list-item.k-hover, .k-hover.k-list-optionlabel {
        color: white;
        background-color: transparent;
        background: linear-gradient(to top, #000088, #000000);
        box-shadow: 0 0 6px 2px blue;
        cursor: pointer;
    }

    .k-list-md .k-list-item, .k-list-md .k-list-optionlabel {
        padding: 5px;
        gap: 5px;
    }

    span.k-list-item-text {
        display: flex;
    }

    .k-animation-container > .k-popup.k-list-container {
        height: auto !important;
        max-height: 200px;
        min-height: 34px;
    }

    .k-gauge > div > svg > g > g:nth-child(2) > g > path { /* ticks */
        stroke: white;
    }

    .k-gauge {
        width: 200px;
        height: 200px;
        background: black;
        background-size: 200px 200px;
        background-repeat: no-repeat;
        background-image: radial-gradient(circle at center, #000090 0%, #000000 15%, #000000 40%, #050505 45%, #000040 65%, transparent 72%);
        background-position: center center;
    }

    .k-gauge > div {
        overflow: hidden;
        position: absolute;
        top: -7px;
        transform: scale(1.05);
    }

</style>