@using CommonLib.Source.Common.Extensions
@using CommonLib.Web.Source.Common.Converters

@namespace CommonLib.Web.Source.Common.Components.MyButtonComponent
@inherits MyButtonBase

@if (_state != null)
{
    <CascadingValue Value="_bpState">
    <CascadingValue Value="_bpBtn">
        @if (_state == ButtonState.Enabled)
        {
            <button class="@_renderClasses" style="@_renderStyle" @attributes="@_renderAttributes" @onclick="@Button_ClickAsync" @onclick:preventDefault>
                @if (Icon.ParameterValue != null && IconPlacement.ParameterValue == ButtonIconPlacement.Left)
                {
                    <MyIcon Color="none" IconType="@Icon.ParameterValue"></MyIcon>
                }
                @if (!Value.ParameterValue.IsNullOrWhiteSpace())
                {
                    <MyButtonDescription>@Value.ParameterValue</MyButtonDescription>
                }
                @if (Icon.ParameterValue != null && IconPlacement.ParameterValue == ButtonIconPlacement.Right)
                {
                    <MyIcon Color="none" IconType="@Icon.ParameterValue"></MyIcon>
                }
                @ChildContent
            </button>
        }
        else if (_state == ButtonState.Disabled)
        {
            <button class="@_renderClasses" style="@_renderStyle" @attributes="@_renderAttributes" disabled>
                @if (Icon.ParameterValue != null && IconPlacement.ParameterValue == ButtonIconPlacement.Left)
                {
                    <MyIcon Color="none" IconType="@Icon.ParameterValue"></MyIcon>
                }
                @if (!Value.ParameterValue.IsNullOrWhiteSpace())
                {
                    <MyButtonDescription>@Value.ParameterValue</MyButtonDescription>
                }
                @if (Icon.ParameterValue != null && IconPlacement.ParameterValue == ButtonIconPlacement.Right)
                {
                    <MyIcon Color="none" IconType="@Icon.ParameterValue"></MyIcon>
                }
                @ChildContent
            </button>
        }
        else if (_state == ButtonState.Loading)
        {
            <button class="@_renderClasses" style="@_renderStyle" @attributes="@_renderAttributes" disabled>
                @if (Icon.ParameterValue != null && IconPlacement.ParameterValue == ButtonIconPlacement.Left)
                {
                    <MyIcon Color="none" IconType="@Icon.ParameterValue"></MyIcon>
                }
                @if (!Value.ParameterValue.IsNullOrWhiteSpace())
                {
                    <MyButtonDescription>@Value.ParameterValue</MyButtonDescription>
                }
                @if (Icon.ParameterValue != null && IconPlacement.ParameterValue == ButtonIconPlacement.Right)
                {
                    <MyIcon Color="none" IconType="@Icon.ParameterValue"></MyIcon>
                }
                @ChildContent
                <MyImage Path="~/images/content-loader.gif" class="my-btn-loader" style="padding-top: 0"></MyImage>
            </button>
        }
    </CascadingValue>
    </CascadingValue>
}