@using CommonLib.Source.Common.Converters
@using CommonLib.Source.Common.Extensions
@using CommonLib.Source.Common.Utils.UtilClasses

@namespace CommonLib.Web.Source.Common.Components.MyIconComponent
@inherits MyIconBase

<CascadingValue Value="_bpParentToCascade" Name="ParentParameter">

    @if (IconType != null)
    {
        @*if (this is MyIconBase icon2 && icon2.IconType.V.LightIcon?.EnumToString().Contains("BasketballBall") == true)
        {
            Logger.For<MyIconBase>().Info($"RENDER: {this}, {icon2.IconType.V.LightIcon.EnumToString()}: {InteractionState.V.State.EnumToString()}");
        }*@

        <div class="@_renderClasses" @onclick="@PrintAndClickCallbackAsync" style="@_renderStyle" @attributes="@_renderAttributes">
            @if (_dPath is not null) 
            {
                <svg xmlns="@_svgXmlns" viewBox="@_svgViewBox" style="@_renderSvgStyle">
                    <path d="@_dPath" style="fill: @(InteractionState.V.IsDisabledOrForceDisabled ? "#404040" : Color switch { null => "white", "none" => "", _ => Color })"></path>
                </svg>
            }
            else if (ComplexSvg is not null) 
            {
                @ComplexSvg
            }
        </div>
    }

</CascadingValue>
